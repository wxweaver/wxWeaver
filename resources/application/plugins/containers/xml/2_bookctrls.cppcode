<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!--
wxWeaver - A Visual Dialog Editor for wxWidgets.
Copyright (C) 2005 JosÃ© Antonio Hurtado
Copyright (C) 2005 Juan Antonio Ortega (as wxFormBuilder)
Copyright (C) 2021 Andrea Zanellato

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-->
<codegen language="C++">

  <templates class="wxNotebook">
    <template name="declaration">#class* $name;</template>
    <template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @} #ifnotnull $window_name @{, $window_name @});</template>
    <template name="include">
      @#include &lt;wx/notebook.h&gt;
      #ifnotnull $bitmapsize
      @{
        #nl @#include &lt;wx/imaglist.h&gt;
        #nl @#include &lt;wx/image.h&gt;
      @}
    </template>
    <template name="settings">
      #ifnotnull $bitmapsize
      @{
        wxSize $name #append ImageSize = $bitmapsize; #nl
        int $name #append Index = 0; #nl
        wxImageList* $name #append Images = new wxImageList($name #append ImageSize.GetWidth(), $name #append ImageSize.GetHeight()); #nl
        $name->AssignImageList($name #append Images); #nl
        wxBitmap $name #append Bitmap; #nl
        wxImage $name #append Image;
      @}
    </template>
    <template name="evt_entry_OnNotebookPageChanged">EVT_NOTEBOOK_PAGE_CHANGED($id, #handler)</template>
    <template name="evt_connect_OnNotebookPageChanged">$name->Connect(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, #handler, nullptr, this);</template>
    <template name="evt_entry_OnNotebookPageChanging">EVT_NOTEBOOK_PAGE_CHANGING($id, #handler)</template>
    <template name="evt_connect_OnNotebookPageChanging">$name->Connect(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, #handler, nullptr, this);</template>
  </templates>

  <templates class="notebookpage">
    <template name="page_add">#parent $name->AddPage(#child $name, $label, $select);</template>
    <template name="settings">
      #ifnotnull #parent $bitmapsize
      @{
        #ifnotnull $bitmap
        @{
          #parent $name #append Bitmap = $bitmap; #nl
          if (#parent $name #append Bitmap.Ok()) #nl
          @{ #indent #nl
            #parent $name #append Image = #parent $name #append Bitmap.ConvertToImage(); #nl
            #parent $name #append Images->Add(#parent $name #append Image.Scale(#parent $name #append ImageSize.GetWidth(), #parent $name #append ImageSize.GetHeight())); #nl
            #parent $name->SetPageImage(#parent $name #append Index, #parent $name #append Index); #nl
            #parent $name #append Index++; #unindent #nl
          @}
        @}
      @}
    </template>
  </templates>

  <templates class="wxAuiNotebook">
    <template name="declaration">#class* $name;</template>
    <template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @});</template>
    <template name="include">@#include &lt;wx/aui/auibook.h&gt;</template>
    <template name="evt_entry_OnAuiNotebookPageClose">EVT_AUINOTEBOOK_PAGE_CLOSE($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookPageClosed">EVT_AUINOTEBOOK_PAGE_CLOSED($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookPageChanged">EVT_AUINOTEBOOK_PAGE_CHANGED($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookPageChanging">EVT_AUINOTEBOOK_PAGE_CHANGING($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookButton">EVT_AUINOTEBOOK_BUTTON($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookBeginDrag">EVT_AUINOTEBOOK_BEGIN_DRAG($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookEndDrag">EVT_AUINOTEBOOK_END_DRAG($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookDragMotion">EVT_AUINOTEBOOK_DRAG_MOTION($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookAllowDND">EVT_AUINOTEBOOK_ALLOW_DND($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookDragDone">EVT_AUINOTEBOOK_DRAG_DONE($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookTabMiddleDown">EVT_AUINOTEBOOK_TAB_MIDDLE_DOWN($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookTabMiddleUp">EVT_AUINOTEBOOK_TAB_MIDDLE_UP($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookTabRightDown">EVT_AUINOTEBOOK_TAB_RIGHT_DOWN($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookTabRightUp">EVT_AUINOTEBOOK_TAB_RIGHT_UP($id, #handler)</template>
    <template name="evt_entry_OnAuiNotebookBGDClick">EVT_AUINOTEBOOK_BG_DCLICK($id, #handler)</template>
    <template name="evt_connect_OnAuiNotebookPageClose">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSE, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookPageClosed">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSED, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookPageChanged">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CHANGED, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookPageChanging">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CHANGING, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookButton">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_BUTTON, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookBeginDrag">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_BEGIN_DRAG, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookEndDrag">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_END_DRAG, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookDragMotion">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_DRAG_MOTION, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookAllowDND">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_ALLOW_DND, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookDragDone">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_DRAG_DONE, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookTabMiddleDown">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_TAB_MIDDLE_DOWN, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookTabMiddleUp">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_TAB_MIDDLE_IP, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookTabRightDown">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_TAB_RIGHT_DOWN, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookTabRightUp">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_TAB_RIGHT_UP, #handler, nullptr, this);</template>
    <template name="evt_connect_OnAuiNotebookBGDClick">$name->Connect(wxEVT_COMMAND_AUINOTEBOOK_BG_DCLICK, #handler, nullptr, this);</template>
  </templates>

  <templates class="auinotebookpage">
    <template name="page_add">#parent $name->AddPage(#child $name, $label, $select, $bitmap);</template>
  </templates>

  <templates class="wxListbook">
    <template name="declaration">#class* $name;</template>
    <template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @} #ifnotnull $window_name @{, $window_name @});</template>
    <template name="include">
      @#include &lt;wx/listbook.h&gt; #nl
      @#include &lt;wx/listctrl.h&gt;
      #ifnotnull $bitmapsize
      @{
        #nl @#include &lt;wx/imaglist.h&gt;
        #nl @#include &lt;wx/image.h&gt;
      @}
    </template>
    <template name="settings">
      #ifnotnull $bitmapsize
      @{
        wxSize $name #append ImageSize = $bitmapsize; #nl
        int $name #append Index = 0; #nl
        wxImageList* $name #append Images = new wxImageList($name #append ImageSize.GetWidth(), $name #append ImageSize.GetHeight()); #nl
        $name->AssignImageList($name #append Images); #nl
        wxBitmap $name #append Bitmap; #nl
        wxImage $name #append Image;
      @}
    </template>
    <template name="after_addchild">
      #ifnull $bitmapsize
      @{
        @#ifdef  __WXGTK__ // Small icon style not supported in GTK #nl
        wxListView* $name #append ListView = $name->GetListView(); #nl
        long $name #append Flags = $name #append ListView->GetWindowStyleFlag(); #nl
        if($name #append Flags &amp; wxLC_SMALL_ICON) #nl
        @{ #indent #nl
          $name #append Flags = ($name #append Flags &amp; ~wxLC_SMALL_ICON) | wxLC_ICON; #unindent #nl
        @} #nl
        $name #append ListView->SetWindowStyleFlag($name #append Flags); #nl
        @#endif
      @}
    </template>
    <template name="evt_entry_OnListbookPageChanged">EVT_LISTBOOK_PAGE_CHANGED($id, #handler)</template>
    <template name="evt_connect_OnListbookPageChanged">$name->Connect(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED, #handler, nullptr, this);</template>
    <template name="evt_entry_OnListbookPageChanging">EVT_LISTBOOK_PAGE_CHANGING($id, #handler)</template>
    <template name="evt_connect_OnListbookPageChanging">$name->Connect(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, #handler, nullptr, this);</template>
  </templates>

  <templates class="listbookpage">
    <template name="page_add">#parent $name->AddPage(#child $name, $label, $select);</template>
    <template name="settings">
      #ifnotnull #parent $bitmapsize
      @{
        #ifnotnull $bitmap
        @{
          #parent $name #append Bitmap = $bitmap; #nl
          if (#parent $name #append Bitmap.Ok()) #nl
          @{ #indent #nl
            #parent $name #append Image = #parent $name #append Bitmap.ConvertToImage(); #nl
            #parent $name #append Images->Add(#parent $name #append Image.Scale(#parent $name #append ImageSize.GetWidth(), #parent $name #append ImageSize.GetHeight())); #nl
            #parent $name->SetPageImage(#parent $name #append Index, #parent $name #append Index); #nl
            #parent $name #append Index++; #unindent #nl
          @}
        @}
      @}
    </template>
  </templates>

	<templates class="wxToolbook">
		<template name="declaration">#class* $name;</template>
		<template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @} #ifnotnull $window_name @{, $window_name @});</template>
		<template name="include">
			@#include &lt;wx/toolbook.h&gt;
			#ifnotnull $bitmapsize
			@{
				#nl @#include &lt;wx/imaglist.h&gt;
				#nl @#include &lt;wx/image.h&gt;
			@}
		</template>
		<template name="settings">
			#ifnotnull $bitmapsize
			@{
				wxSize $name #append ImageSize = $bitmapsize; #nl
				int $name #append Index = -1; #nl
				wxImageList* $name #append Images = new wxImageList($name #append ImageSize.GetWidth(), $name #append ImageSize.GetHeight()); #nl
				$name->AssignImageList($name #append Images); #nl
				wxBitmap $name #append Bitmap; #nl
				wxImage $name #append Image;
			@}
		</template>
		<template name="evt_entry_OnToolbookPageChanged">EVT_TOOLBOOK_PAGE_CHANGED($id, #handler)</template>
		<template name="evt_connect_OnToolbookPageChanged">$name->Connect(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED, #handler, nullptr, this);</template>
		<template name="evt_entry_OnToolbookPageChanging">EVT_TOOLBOOK_PAGE_CHANGING($id, #handler)</template>
		<template name="evt_connect_OnToolbookPageChanging">$name->Connect(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, #handler, nullptr, this);</template>
	</templates>

	<templates class="toolbookpage">
		<template name="settings">
			#ifnotnull #parent $bitmapsize
			@{
				#ifnotnull $bitmap
				@{
					#parent $name #append Bitmap = $bitmap; #nl
					if (#parent $name #append Bitmap.Ok()) #nl
					@{ #indent #nl
						#parent $name #append Image = #parent $name #append Bitmap.ConvertToImage(); #nl
						#parent $name #append Images->Add(#parent $name #append Image.Scale(#parent $name #append ImageSize.GetWidth(), #parent $name #append ImageSize.GetHeight())); #nl
						#parent $name->SetPageImage(#parent $name #append Index, #parent $name #append Index); #nl
						#parent $name #append Index++; #unindent #nl
					@}
				@}
			@}
		</template>
		<template name="page_add">#parent $name->AddPage(#child $name, $label, $select, #parent $name #append Index);</template>
	</templates>

	<templates class="wxTreebook">
		<template name="declaration">#class* $name;</template>
		<template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @} #ifnotnull $window_name @{, $window_name @});</template>
		<template name="include">
			@#include &lt;wx/treebook.h&gt;
			#ifnotnull $bitmapsize
			@{
				#nl @#include &lt;wx/imaglist.h&gt;
				#nl @#include &lt;wx/image.h&gt;
			@}
		</template>
		<template name="settings">
			#ifnotnull $bitmapsize
			@{
				wxSize $name #append ImageSize = $bitmapsize; #nl
				int $name #append Index = 0; #nl
				wxImageList* $name #append Images = new wxImageList($name #append ImageSize.GetWidth(), $name #append ImageSize.GetHeight()); #nl
				$name->AssignImageList($name #append Images); #nl
				wxBitmap $name #append Bitmap; #nl
				wxImage $name #append Image;
			@}
		</template>
		<template name="evt_entry_OnTreebookPageChanged">EVT_TREEBOOK_PAGE_CHANGED($id, #handler)</template>
		<template name="evt_connect_OnTreebookPageChanged">$name->Connect(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED, #handler, nullptr, this);</template>
		<template name="evt_entry_OnTreebookPageChanging">EVT_TREEBOOK_PAGE_CHANGING($id, #handler)</template>
		<template name="evt_connect_OnTreebookPageChanging">$name->Connect(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, #handler, nullptr, this);</template>
		<template name="evt_entry_OnTreebookNodeCollapsed">EVT_TREEBOOK_NODE_COLLAPSED($id, #handler)</template>
		<template name="evt_connect_OnTreebookNodeCollapsed">$name->Connect(wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED, #handler, nullptr, this);</template>
		<template name="evt_entry_OnTreebookNodeExpanded">EVT_TREEBOOK_NODE_EXPANDED($id, #handler)</template>
		<template name="evt_connect_OnTreebookNodeExpanded">$name->Connect(wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED, #handler, nullptr, this);</template>
	</templates>

	<templates class="treebookpage">
		<template name="page_add">#parent $name->AddPage(#child $name, $label, $select);</template>
		<template name="subpage_add">#parent $name->InsertSubPage($depth - 1, #child $name, $label, $select);</template>
		<template name="settings">
			#ifnotnull #parent $bitmapsize
			@{
				#ifnotnull $bitmap
				@{
					#parent $name #append Bitmap = $bitmap; #nl
					if (#parent $name #append Bitmap.Ok()) #nl
					@{ #indent #nl
						#parent $name #append Image = #parent $name #append Bitmap.ConvertToImage(); #nl
						#parent $name #append Images->Add(#parent $name #append Image.Scale(#parent $name #append ImageSize.GetWidth(), #parent $name #append ImageSize.GetHeight())); #nl
						#parent $name->SetPageImage(#parent $name #append Index, #parent $name #append Index); #nl
						#parent $name #append Index++; #unindent #nl
					@}
				@}
			@}
		</template>
	</templates>

  <templates class="wxChoicebook">
    <template name="declaration">#class* $name;</template>
    <template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $style #ifnotnull $window_style @{ |$window_style @} #ifnotnull $window_name @{, $window_name @});</template>
    <template name="include">@#include &lt;wx/choicebk.h&gt;</template>
    <template name="evt_entry_OnChoicebookPageChanged">EVT_CHOICEBOOK_PAGE_CHANGED($id, #handler)</template>
    <template name="evt_connect_OnChoicebookPageChanged">$name->Connect(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED, #handler, nullptr, this);</template>
    <template name="evt_entry_OnChoicebookPageChanging">EVT_CHOICEBOOK_PAGE_CHANGING($id, #handler)</template>
    <template name="evt_connect_OnChoicebookPageChanging">$name->Connect(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, #handler, nullptr, this);</template>
  </templates>

  <templates class="choicebookpage">
    <template name="page_add">#parent $name->AddPage(#child $name, $label, $select);</template>
  </templates>

  <templates class="wxSimplebook">
    <template name="declaration">#class* $name;</template>
    <template name="construction">$name = new #class(#wxparent $name, $id, $pos, $size, $window_style #ifnotnull $window_name @{, $window_name @});</template>
    <template name="include">@#include &lt;wx/simplebook.h&gt;</template>
    <template name="evt_entry_OnSimplebookPageChanged">EVT_BOOKCTRL_PAGE_CHANGED($id, #handler)</template>
    <template name="evt_connect_OnSimplebookPageChanged">$name->Connect(wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGED, #handler, nullptr, this);</template>
    <template name="evt_entry_OnSimplebookPageChanging">EVT_BOOKCTRL_PAGE_CHANGING($id, #handler)</template>
    <template name="evt_connect_OnSimplebookPageChanging">$name->Connect(wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGING, #handler, nullptr, this);</template>
  </templates>

  <templates class="simplebookpage">
    <template name="page_add">#parent $name->AddPage(#child $name, $label, $select);</template>
  </templates>

</codegen>
